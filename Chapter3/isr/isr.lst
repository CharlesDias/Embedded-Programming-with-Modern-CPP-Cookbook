                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  3 2018) (Linux)
                                      4 ; This file was generated Mon Mar 23 23:01:17 2020
                                      5 ;--------------------------------------------------------
                                      6 	.module isr
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _timer0_ISR
                                     14 	.globl _TF1
                                     15 	.globl _TR1
                                     16 	.globl _TF0
                                     17 	.globl _TR0
                                     18 	.globl _IE1
                                     19 	.globl _IT1
                                     20 	.globl _IE0
                                     21 	.globl _IT0
                                     22 	.globl _SM0
                                     23 	.globl _SM1
                                     24 	.globl _SM2
                                     25 	.globl _REN
                                     26 	.globl _TB8
                                     27 	.globl _RB8
                                     28 	.globl _TI
                                     29 	.globl _RI
                                     30 	.globl _CY
                                     31 	.globl _AC
                                     32 	.globl _F0
                                     33 	.globl _RS1
                                     34 	.globl _RS0
                                     35 	.globl _OV
                                     36 	.globl _F1
                                     37 	.globl _P
                                     38 	.globl _RD
                                     39 	.globl _WR
                                     40 	.globl _T1
                                     41 	.globl _T0
                                     42 	.globl _INT1
                                     43 	.globl _INT0
                                     44 	.globl _TXD0
                                     45 	.globl _TXD
                                     46 	.globl _RXD0
                                     47 	.globl _RXD
                                     48 	.globl _P3_7
                                     49 	.globl _P3_6
                                     50 	.globl _P3_5
                                     51 	.globl _P3_4
                                     52 	.globl _P3_3
                                     53 	.globl _P3_2
                                     54 	.globl _P3_1
                                     55 	.globl _P3_0
                                     56 	.globl _P2_7
                                     57 	.globl _P2_6
                                     58 	.globl _P2_5
                                     59 	.globl _P2_4
                                     60 	.globl _P2_3
                                     61 	.globl _P2_2
                                     62 	.globl _P2_1
                                     63 	.globl _P2_0
                                     64 	.globl _P1_7
                                     65 	.globl _P1_6
                                     66 	.globl _P1_5
                                     67 	.globl _P1_4
                                     68 	.globl _P1_3
                                     69 	.globl _P1_2
                                     70 	.globl _P1_1
                                     71 	.globl _P1_0
                                     72 	.globl _P0_7
                                     73 	.globl _P0_6
                                     74 	.globl _P0_5
                                     75 	.globl _P0_4
                                     76 	.globl _P0_3
                                     77 	.globl _P0_2
                                     78 	.globl _P0_1
                                     79 	.globl _P0_0
                                     80 	.globl _PS
                                     81 	.globl _PT1
                                     82 	.globl _PX1
                                     83 	.globl _PT0
                                     84 	.globl _PX0
                                     85 	.globl _EA
                                     86 	.globl _ES
                                     87 	.globl _ET1
                                     88 	.globl _EX1
                                     89 	.globl _ET0
                                     90 	.globl _EX0
                                     91 	.globl _BREG_F7
                                     92 	.globl _BREG_F6
                                     93 	.globl _BREG_F5
                                     94 	.globl _BREG_F4
                                     95 	.globl _BREG_F3
                                     96 	.globl _BREG_F2
                                     97 	.globl _BREG_F1
                                     98 	.globl _BREG_F0
                                     99 	.globl _TMOD
                                    100 	.globl _TL1
                                    101 	.globl _TL0
                                    102 	.globl _TH1
                                    103 	.globl _TH0
                                    104 	.globl _TCON
                                    105 	.globl _SP
                                    106 	.globl _SCON
                                    107 	.globl _SBUF0
                                    108 	.globl _SBUF
                                    109 	.globl _PSW
                                    110 	.globl _PCON
                                    111 	.globl _P3
                                    112 	.globl _P2
                                    113 	.globl _P1
                                    114 	.globl _P0
                                    115 	.globl _IP
                                    116 	.globl _IE
                                    117 	.globl _DP0L
                                    118 	.globl _DPL
                                    119 	.globl _DP0H
                                    120 	.globl _DPH
                                    121 	.globl _B
                                    122 	.globl _ACC
                                    123 	.globl _Counter
                                    124 ;--------------------------------------------------------
                                    125 ; special function registers
                                    126 ;--------------------------------------------------------
                                    127 	.area RSEG    (ABS,DATA)
      000000                        128 	.org 0x0000
                           0000E0   129 G$ACC$0$0 == 0x00e0
                           0000E0   130 _ACC	=	0x00e0
                           0000F0   131 G$B$0$0 == 0x00f0
                           0000F0   132 _B	=	0x00f0
                           000083   133 G$DPH$0$0 == 0x0083
                           000083   134 _DPH	=	0x0083
                           000083   135 G$DP0H$0$0 == 0x0083
                           000083   136 _DP0H	=	0x0083
                           000082   137 G$DPL$0$0 == 0x0082
                           000082   138 _DPL	=	0x0082
                           000082   139 G$DP0L$0$0 == 0x0082
                           000082   140 _DP0L	=	0x0082
                           0000A8   141 G$IE$0$0 == 0x00a8
                           0000A8   142 _IE	=	0x00a8
                           0000B8   143 G$IP$0$0 == 0x00b8
                           0000B8   144 _IP	=	0x00b8
                           000080   145 G$P0$0$0 == 0x0080
                           000080   146 _P0	=	0x0080
                           000090   147 G$P1$0$0 == 0x0090
                           000090   148 _P1	=	0x0090
                           0000A0   149 G$P2$0$0 == 0x00a0
                           0000A0   150 _P2	=	0x00a0
                           0000B0   151 G$P3$0$0 == 0x00b0
                           0000B0   152 _P3	=	0x00b0
                           000087   153 G$PCON$0$0 == 0x0087
                           000087   154 _PCON	=	0x0087
                           0000D0   155 G$PSW$0$0 == 0x00d0
                           0000D0   156 _PSW	=	0x00d0
                           000099   157 G$SBUF$0$0 == 0x0099
                           000099   158 _SBUF	=	0x0099
                           000099   159 G$SBUF0$0$0 == 0x0099
                           000099   160 _SBUF0	=	0x0099
                           000098   161 G$SCON$0$0 == 0x0098
                           000098   162 _SCON	=	0x0098
                           000081   163 G$SP$0$0 == 0x0081
                           000081   164 _SP	=	0x0081
                           000088   165 G$TCON$0$0 == 0x0088
                           000088   166 _TCON	=	0x0088
                           00008C   167 G$TH0$0$0 == 0x008c
                           00008C   168 _TH0	=	0x008c
                           00008D   169 G$TH1$0$0 == 0x008d
                           00008D   170 _TH1	=	0x008d
                           00008A   171 G$TL0$0$0 == 0x008a
                           00008A   172 _TL0	=	0x008a
                           00008B   173 G$TL1$0$0 == 0x008b
                           00008B   174 _TL1	=	0x008b
                           000089   175 G$TMOD$0$0 == 0x0089
                           000089   176 _TMOD	=	0x0089
                                    177 ;--------------------------------------------------------
                                    178 ; special function bits
                                    179 ;--------------------------------------------------------
                                    180 	.area RSEG    (ABS,DATA)
      000000                        181 	.org 0x0000
                           0000F0   182 G$BREG_F0$0$0 == 0x00f0
                           0000F0   183 _BREG_F0	=	0x00f0
                           0000F1   184 G$BREG_F1$0$0 == 0x00f1
                           0000F1   185 _BREG_F1	=	0x00f1
                           0000F2   186 G$BREG_F2$0$0 == 0x00f2
                           0000F2   187 _BREG_F2	=	0x00f2
                           0000F3   188 G$BREG_F3$0$0 == 0x00f3
                           0000F3   189 _BREG_F3	=	0x00f3
                           0000F4   190 G$BREG_F4$0$0 == 0x00f4
                           0000F4   191 _BREG_F4	=	0x00f4
                           0000F5   192 G$BREG_F5$0$0 == 0x00f5
                           0000F5   193 _BREG_F5	=	0x00f5
                           0000F6   194 G$BREG_F6$0$0 == 0x00f6
                           0000F6   195 _BREG_F6	=	0x00f6
                           0000F7   196 G$BREG_F7$0$0 == 0x00f7
                           0000F7   197 _BREG_F7	=	0x00f7
                           0000A8   198 G$EX0$0$0 == 0x00a8
                           0000A8   199 _EX0	=	0x00a8
                           0000A9   200 G$ET0$0$0 == 0x00a9
                           0000A9   201 _ET0	=	0x00a9
                           0000AA   202 G$EX1$0$0 == 0x00aa
                           0000AA   203 _EX1	=	0x00aa
                           0000AB   204 G$ET1$0$0 == 0x00ab
                           0000AB   205 _ET1	=	0x00ab
                           0000AC   206 G$ES$0$0 == 0x00ac
                           0000AC   207 _ES	=	0x00ac
                           0000AF   208 G$EA$0$0 == 0x00af
                           0000AF   209 _EA	=	0x00af
                           0000B8   210 G$PX0$0$0 == 0x00b8
                           0000B8   211 _PX0	=	0x00b8
                           0000B9   212 G$PT0$0$0 == 0x00b9
                           0000B9   213 _PT0	=	0x00b9
                           0000BA   214 G$PX1$0$0 == 0x00ba
                           0000BA   215 _PX1	=	0x00ba
                           0000BB   216 G$PT1$0$0 == 0x00bb
                           0000BB   217 _PT1	=	0x00bb
                           0000BC   218 G$PS$0$0 == 0x00bc
                           0000BC   219 _PS	=	0x00bc
                           000080   220 G$P0_0$0$0 == 0x0080
                           000080   221 _P0_0	=	0x0080
                           000081   222 G$P0_1$0$0 == 0x0081
                           000081   223 _P0_1	=	0x0081
                           000082   224 G$P0_2$0$0 == 0x0082
                           000082   225 _P0_2	=	0x0082
                           000083   226 G$P0_3$0$0 == 0x0083
                           000083   227 _P0_3	=	0x0083
                           000084   228 G$P0_4$0$0 == 0x0084
                           000084   229 _P0_4	=	0x0084
                           000085   230 G$P0_5$0$0 == 0x0085
                           000085   231 _P0_5	=	0x0085
                           000086   232 G$P0_6$0$0 == 0x0086
                           000086   233 _P0_6	=	0x0086
                           000087   234 G$P0_7$0$0 == 0x0087
                           000087   235 _P0_7	=	0x0087
                           000090   236 G$P1_0$0$0 == 0x0090
                           000090   237 _P1_0	=	0x0090
                           000091   238 G$P1_1$0$0 == 0x0091
                           000091   239 _P1_1	=	0x0091
                           000092   240 G$P1_2$0$0 == 0x0092
                           000092   241 _P1_2	=	0x0092
                           000093   242 G$P1_3$0$0 == 0x0093
                           000093   243 _P1_3	=	0x0093
                           000094   244 G$P1_4$0$0 == 0x0094
                           000094   245 _P1_4	=	0x0094
                           000095   246 G$P1_5$0$0 == 0x0095
                           000095   247 _P1_5	=	0x0095
                           000096   248 G$P1_6$0$0 == 0x0096
                           000096   249 _P1_6	=	0x0096
                           000097   250 G$P1_7$0$0 == 0x0097
                           000097   251 _P1_7	=	0x0097
                           0000A0   252 G$P2_0$0$0 == 0x00a0
                           0000A0   253 _P2_0	=	0x00a0
                           0000A1   254 G$P2_1$0$0 == 0x00a1
                           0000A1   255 _P2_1	=	0x00a1
                           0000A2   256 G$P2_2$0$0 == 0x00a2
                           0000A2   257 _P2_2	=	0x00a2
                           0000A3   258 G$P2_3$0$0 == 0x00a3
                           0000A3   259 _P2_3	=	0x00a3
                           0000A4   260 G$P2_4$0$0 == 0x00a4
                           0000A4   261 _P2_4	=	0x00a4
                           0000A5   262 G$P2_5$0$0 == 0x00a5
                           0000A5   263 _P2_5	=	0x00a5
                           0000A6   264 G$P2_6$0$0 == 0x00a6
                           0000A6   265 _P2_6	=	0x00a6
                           0000A7   266 G$P2_7$0$0 == 0x00a7
                           0000A7   267 _P2_7	=	0x00a7
                           0000B0   268 G$P3_0$0$0 == 0x00b0
                           0000B0   269 _P3_0	=	0x00b0
                           0000B1   270 G$P3_1$0$0 == 0x00b1
                           0000B1   271 _P3_1	=	0x00b1
                           0000B2   272 G$P3_2$0$0 == 0x00b2
                           0000B2   273 _P3_2	=	0x00b2
                           0000B3   274 G$P3_3$0$0 == 0x00b3
                           0000B3   275 _P3_3	=	0x00b3
                           0000B4   276 G$P3_4$0$0 == 0x00b4
                           0000B4   277 _P3_4	=	0x00b4
                           0000B5   278 G$P3_5$0$0 == 0x00b5
                           0000B5   279 _P3_5	=	0x00b5
                           0000B6   280 G$P3_6$0$0 == 0x00b6
                           0000B6   281 _P3_6	=	0x00b6
                           0000B7   282 G$P3_7$0$0 == 0x00b7
                           0000B7   283 _P3_7	=	0x00b7
                           0000B0   284 G$RXD$0$0 == 0x00b0
                           0000B0   285 _RXD	=	0x00b0
                           0000B0   286 G$RXD0$0$0 == 0x00b0
                           0000B0   287 _RXD0	=	0x00b0
                           0000B1   288 G$TXD$0$0 == 0x00b1
                           0000B1   289 _TXD	=	0x00b1
                           0000B1   290 G$TXD0$0$0 == 0x00b1
                           0000B1   291 _TXD0	=	0x00b1
                           0000B2   292 G$INT0$0$0 == 0x00b2
                           0000B2   293 _INT0	=	0x00b2
                           0000B3   294 G$INT1$0$0 == 0x00b3
                           0000B3   295 _INT1	=	0x00b3
                           0000B4   296 G$T0$0$0 == 0x00b4
                           0000B4   297 _T0	=	0x00b4
                           0000B5   298 G$T1$0$0 == 0x00b5
                           0000B5   299 _T1	=	0x00b5
                           0000B6   300 G$WR$0$0 == 0x00b6
                           0000B6   301 _WR	=	0x00b6
                           0000B7   302 G$RD$0$0 == 0x00b7
                           0000B7   303 _RD	=	0x00b7
                           0000D0   304 G$P$0$0 == 0x00d0
                           0000D0   305 _P	=	0x00d0
                           0000D1   306 G$F1$0$0 == 0x00d1
                           0000D1   307 _F1	=	0x00d1
                           0000D2   308 G$OV$0$0 == 0x00d2
                           0000D2   309 _OV	=	0x00d2
                           0000D3   310 G$RS0$0$0 == 0x00d3
                           0000D3   311 _RS0	=	0x00d3
                           0000D4   312 G$RS1$0$0 == 0x00d4
                           0000D4   313 _RS1	=	0x00d4
                           0000D5   314 G$F0$0$0 == 0x00d5
                           0000D5   315 _F0	=	0x00d5
                           0000D6   316 G$AC$0$0 == 0x00d6
                           0000D6   317 _AC	=	0x00d6
                           0000D7   318 G$CY$0$0 == 0x00d7
                           0000D7   319 _CY	=	0x00d7
                           000098   320 G$RI$0$0 == 0x0098
                           000098   321 _RI	=	0x0098
                           000099   322 G$TI$0$0 == 0x0099
                           000099   323 _TI	=	0x0099
                           00009A   324 G$RB8$0$0 == 0x009a
                           00009A   325 _RB8	=	0x009a
                           00009B   326 G$TB8$0$0 == 0x009b
                           00009B   327 _TB8	=	0x009b
                           00009C   328 G$REN$0$0 == 0x009c
                           00009C   329 _REN	=	0x009c
                           00009D   330 G$SM2$0$0 == 0x009d
                           00009D   331 _SM2	=	0x009d
                           00009E   332 G$SM1$0$0 == 0x009e
                           00009E   333 _SM1	=	0x009e
                           00009F   334 G$SM0$0$0 == 0x009f
                           00009F   335 _SM0	=	0x009f
                           000088   336 G$IT0$0$0 == 0x0088
                           000088   337 _IT0	=	0x0088
                           000089   338 G$IE0$0$0 == 0x0089
                           000089   339 _IE0	=	0x0089
                           00008A   340 G$IT1$0$0 == 0x008a
                           00008A   341 _IT1	=	0x008a
                           00008B   342 G$IE1$0$0 == 0x008b
                           00008B   343 _IE1	=	0x008b
                           00008C   344 G$TR0$0$0 == 0x008c
                           00008C   345 _TR0	=	0x008c
                           00008D   346 G$TF0$0$0 == 0x008d
                           00008D   347 _TF0	=	0x008d
                           00008E   348 G$TR1$0$0 == 0x008e
                           00008E   349 _TR1	=	0x008e
                           00008F   350 G$TF1$0$0 == 0x008f
                           00008F   351 _TF1	=	0x008f
                                    352 ;--------------------------------------------------------
                                    353 ; overlayable register banks
                                    354 ;--------------------------------------------------------
                                    355 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        356 	.ds 8
                                    357 ;--------------------------------------------------------
                                    358 ; internal ram data
                                    359 ;--------------------------------------------------------
                                    360 	.area DSEG    (DATA)
                           000000   361 G$Counter$0$0==.
      000000                        362 _Counter::
      000000                        363 	.ds 2
                                    364 ;--------------------------------------------------------
                                    365 ; overlayable items in internal ram 
                                    366 ;--------------------------------------------------------
                                    367 ;--------------------------------------------------------
                                    368 ; Stack segment in internal ram 
                                    369 ;--------------------------------------------------------
                                    370 	.area	SSEG
      000000                        371 __start__stack:
      000000                        372 	.ds	1
                                    373 
                                    374 ;--------------------------------------------------------
                                    375 ; indirectly addressable internal ram data
                                    376 ;--------------------------------------------------------
                                    377 	.area ISEG    (DATA)
                                    378 ;--------------------------------------------------------
                                    379 ; absolute internal ram data
                                    380 ;--------------------------------------------------------
                                    381 	.area IABS    (ABS,DATA)
                                    382 	.area IABS    (ABS,DATA)
                                    383 ;--------------------------------------------------------
                                    384 ; bit data
                                    385 ;--------------------------------------------------------
                                    386 	.area BSEG    (BIT)
                                    387 ;--------------------------------------------------------
                                    388 ; paged external ram data
                                    389 ;--------------------------------------------------------
                                    390 	.area PSEG    (PAG,XDATA)
                                    391 ;--------------------------------------------------------
                                    392 ; external ram data
                                    393 ;--------------------------------------------------------
                                    394 	.area XSEG    (XDATA)
                                    395 ;--------------------------------------------------------
                                    396 ; absolute external ram data
                                    397 ;--------------------------------------------------------
                                    398 	.area XABS    (ABS,XDATA)
                                    399 ;--------------------------------------------------------
                                    400 ; external initialized ram data
                                    401 ;--------------------------------------------------------
                                    402 	.area XISEG   (XDATA)
                                    403 	.area HOME    (CODE)
                                    404 	.area GSINIT0 (CODE)
                                    405 	.area GSINIT1 (CODE)
                                    406 	.area GSINIT2 (CODE)
                                    407 	.area GSINIT3 (CODE)
                                    408 	.area GSINIT4 (CODE)
                                    409 	.area GSINIT5 (CODE)
                                    410 	.area GSINIT  (CODE)
                                    411 	.area GSFINAL (CODE)
                                    412 	.area CSEG    (CODE)
                                    413 ;--------------------------------------------------------
                                    414 ; interrupt vector 
                                    415 ;--------------------------------------------------------
                                    416 	.area HOME    (CODE)
      000000                        417 __interrupt_vect:
      000000 02r00r00         [24]  418 	ljmp	__sdcc_gsinit_startup
      000003 32               [24]  419 	reti
      000004                        420 	.ds	7
      00000B 02r00r00         [24]  421 	ljmp	_timer0_ISR
                                    422 ;--------------------------------------------------------
                                    423 ; global & static initialisations
                                    424 ;--------------------------------------------------------
                                    425 	.area HOME    (CODE)
                                    426 	.area GSINIT  (CODE)
                                    427 	.area GSFINAL (CODE)
                                    428 	.area GSINIT  (CODE)
                                    429 	.globl __sdcc_gsinit_startup
                                    430 	.globl __sdcc_program_startup
                                    431 	.globl __start__stack
                                    432 	.globl __mcs51_genXINIT
                                    433 	.globl __mcs51_genXRAMCLEAR
                                    434 	.globl __mcs51_genRAMCLEAR
                           000000   435 	C$isr.c$3$1$4 ==.
                                    436 ;	isr.c:3: volatile int Counter = 0;
      000000 E4               [12]  437 	clr	a
      000001 F5*00            [12]  438 	mov	_Counter,a
      000003 F5*01            [12]  439 	mov	(_Counter + 1),a
                                    440 	.area GSFINAL (CODE)
      000000 02r00r0E         [24]  441 	ljmp	__sdcc_program_startup
                                    442 ;--------------------------------------------------------
                                    443 ; Home
                                    444 ;--------------------------------------------------------
                                    445 	.area HOME    (CODE)
                                    446 	.area HOME    (CODE)
      00000E                        447 __sdcc_program_startup:
      00000E 02r00r14         [24]  448 	ljmp	_main
                                    449 ;	return from main will return to caller
                                    450 ;--------------------------------------------------------
                                    451 ; code
                                    452 ;--------------------------------------------------------
                                    453 	.area CSEG    (CODE)
                                    454 ;------------------------------------------------------------
                                    455 ;Allocation info for local variables in function 'timer0_ISR'
                                    456 ;------------------------------------------------------------
                           000000   457 	G$timer0_ISR$0$0 ==.
                           000000   458 	C$isr.c$4$0$0 ==.
                                    459 ;	isr.c:4: void timer0_ISR (void) __interrupt(1) //interrupt no. 1 for Timer0 
                                    460 ;	-----------------------------------------
                                    461 ;	 function timer0_ISR
                                    462 ;	-----------------------------------------
      000000                        463 _timer0_ISR:
                           000007   464 	ar7 = 0x07
                           000006   465 	ar6 = 0x06
                           000005   466 	ar5 = 0x05
                           000004   467 	ar4 = 0x04
                           000003   468 	ar3 = 0x03
                           000002   469 	ar2 = 0x02
                           000001   470 	ar1 = 0x01
                           000000   471 	ar0 = 0x00
      000000 C0 E0            [24]  472 	push	acc
      000002 C0 D0            [24]  473 	push	psw
                           000004   474 	C$isr.c$7$1$2 ==.
                                    475 ;	isr.c:7: Counter++;
      000004 74 01            [12]  476 	mov	a,#0x01
      000006 25*00            [12]  477 	add	a,_Counter
      000008 F5*00            [12]  478 	mov	_Counter,a
      00000A E4               [12]  479 	clr	a
      00000B 35*01            [12]  480 	addc	a,(_Counter + 1)
      00000D F5*01            [12]  481 	mov	(_Counter + 1),a
      00000F D0 D0            [24]  482 	pop	psw
      000011 D0 E0            [24]  483 	pop	acc
                           000013   484 	C$isr.c$8$1$2 ==.
                           000013   485 	XG$timer0_ISR$0$0 ==.
      000013 32               [24]  486 	reti
                                    487 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    488 ;	eliminated unneeded push/pop dpl
                                    489 ;	eliminated unneeded push/pop dph
                                    490 ;	eliminated unneeded push/pop b
                                    491 ;------------------------------------------------------------
                                    492 ;Allocation info for local variables in function 'main'
                                    493 ;------------------------------------------------------------
                           000014   494 	G$main$0$0 ==.
                           000014   495 	C$isr.c$10$1$2 ==.
                                    496 ;	isr.c:10: void main(void) 
                                    497 ;	-----------------------------------------
                                    498 ;	 function main
                                    499 ;	-----------------------------------------
      000014                        500 _main:
                           000014   501 	C$isr.c$12$1$4 ==.
                                    502 ;	isr.c:12: TMOD = 0x03; 
      000014 75 89 03         [24]  503 	mov	_TMOD,#0x03
                           000017   504 	C$isr.c$13$1$4 ==.
                                    505 ;	isr.c:13: TH0 = 0x0; 
      000017 75 8C 00         [24]  506 	mov	_TH0,#0x00
                           00001A   507 	C$isr.c$14$1$4 ==.
                                    508 ;	isr.c:14: TL0 = 0x0; 
      00001A 75 8A 00         [24]  509 	mov	_TL0,#0x00
                           00001D   510 	C$isr.c$15$1$4 ==.
                                    511 ;	isr.c:15: ET0 = 1; 
      00001D D2 A9            [12]  512 	setb	_ET0
                           00001F   513 	C$isr.c$16$1$4 ==.
                                    514 ;	isr.c:16: TR0 = 1;
      00001F D2 8C            [12]  515 	setb	_TR0
                           000021   516 	C$isr.c$17$1$4 ==.
                                    517 ;	isr.c:17: EA = 1;
      000021 D2 AF            [12]  518 	setb	_EA
                           000023   519 	C$isr.c$18$1$4 ==.
                                    520 ;	isr.c:18: while (1); // do nothing 
      000023                        521 00102$:
      000023 80 FE            [24]  522 	sjmp	00102$
                           000025   523 	C$isr.c$19$1$4 ==.
                           000025   524 	XG$main$0$0 ==.
      000025 22               [24]  525 	ret
                                    526 	.area CSEG    (CODE)
                                    527 	.area CONST   (CODE)
                                    528 	.area XINIT   (CODE)
                                    529 	.area CABS    (ABS,CODE)
